package dao.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AdsExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public AdsExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()),
					property);
		}

		protected void addCriterionForJDBCDate(String condition,
				List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1,
				Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()),
					new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<String> values) {
			addCriterion("ID in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<String> values) {
			addCriterion("ID not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andMcIsNull() {
			addCriterion("MC is null");
			return (Criteria) this;
		}

		public Criteria andMcIsNotNull() {
			addCriterion("MC is not null");
			return (Criteria) this;
		}

		public Criteria andMcEqualTo(String value) {
			addCriterion("MC =", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcNotEqualTo(String value) {
			addCriterion("MC <>", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcGreaterThan(String value) {
			addCriterion("MC >", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcGreaterThanOrEqualTo(String value) {
			addCriterion("MC >=", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcLessThan(String value) {
			addCriterion("MC <", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcLessThanOrEqualTo(String value) {
			addCriterion("MC <=", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcLike(String value) {
			addCriterion("MC like", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcNotLike(String value) {
			addCriterion("MC not like", value, "mc");
			return (Criteria) this;
		}

		public Criteria andMcIn(List<String> values) {
			addCriterion("MC in", values, "mc");
			return (Criteria) this;
		}

		public Criteria andMcNotIn(List<String> values) {
			addCriterion("MC not in", values, "mc");
			return (Criteria) this;
		}

		public Criteria andMcBetween(String value1, String value2) {
			addCriterion("MC between", value1, value2, "mc");
			return (Criteria) this;
		}

		public Criteria andMcNotBetween(String value1, String value2) {
			addCriterion("MC not between", value1, value2, "mc");
			return (Criteria) this;
		}

		public Criteria andUseridIsNull() {
			addCriterion("USERID is null");
			return (Criteria) this;
		}

		public Criteria andUseridIsNotNull() {
			addCriterion("USERID is not null");
			return (Criteria) this;
		}

		public Criteria andUseridEqualTo(String value) {
			addCriterion("USERID =", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotEqualTo(String value) {
			addCriterion("USERID <>", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThan(String value) {
			addCriterion("USERID >", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridGreaterThanOrEqualTo(String value) {
			addCriterion("USERID >=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThan(String value) {
			addCriterion("USERID <", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLessThanOrEqualTo(String value) {
			addCriterion("USERID <=", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridLike(String value) {
			addCriterion("USERID like", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotLike(String value) {
			addCriterion("USERID not like", value, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridIn(List<String> values) {
			addCriterion("USERID in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotIn(List<String> values) {
			addCriterion("USERID not in", values, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridBetween(String value1, String value2) {
			addCriterion("USERID between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUseridNotBetween(String value1, String value2) {
			addCriterion("USERID not between", value1, value2, "userid");
			return (Criteria) this;
		}

		public Criteria andUrlIsNull() {
			addCriterion("URL is null");
			return (Criteria) this;
		}

		public Criteria andUrlIsNotNull() {
			addCriterion("URL is not null");
			return (Criteria) this;
		}

		public Criteria andUrlEqualTo(String value) {
			addCriterion("URL =", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlNotEqualTo(String value) {
			addCriterion("URL <>", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlGreaterThan(String value) {
			addCriterion("URL >", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlGreaterThanOrEqualTo(String value) {
			addCriterion("URL >=", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlLessThan(String value) {
			addCriterion("URL <", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlLessThanOrEqualTo(String value) {
			addCriterion("URL <=", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlLike(String value) {
			addCriterion("URL like", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlNotLike(String value) {
			addCriterion("URL not like", value, "url");
			return (Criteria) this;
		}

		public Criteria andUrlIn(List<String> values) {
			addCriterion("URL in", values, "url");
			return (Criteria) this;
		}

		public Criteria andUrlNotIn(List<String> values) {
			addCriterion("URL not in", values, "url");
			return (Criteria) this;
		}

		public Criteria andUrlBetween(String value1, String value2) {
			addCriterion("URL between", value1, value2, "url");
			return (Criteria) this;
		}

		public Criteria andUrlNotBetween(String value1, String value2) {
			addCriterion("URL not between", value1, value2, "url");
			return (Criteria) this;
		}

		public Criteria andPhotoIsNull() {
			addCriterion("PHOTO is null");
			return (Criteria) this;
		}

		public Criteria andPhotoIsNotNull() {
			addCriterion("PHOTO is not null");
			return (Criteria) this;
		}

		public Criteria andPhotoEqualTo(String value) {
			addCriterion("PHOTO =", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoNotEqualTo(String value) {
			addCriterion("PHOTO <>", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoGreaterThan(String value) {
			addCriterion("PHOTO >", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoGreaterThanOrEqualTo(String value) {
			addCriterion("PHOTO >=", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoLessThan(String value) {
			addCriterion("PHOTO <", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoLessThanOrEqualTo(String value) {
			addCriterion("PHOTO <=", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoLike(String value) {
			addCriterion("PHOTO like", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoNotLike(String value) {
			addCriterion("PHOTO not like", value, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoIn(List<String> values) {
			addCriterion("PHOTO in", values, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoNotIn(List<String> values) {
			addCriterion("PHOTO not in", values, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoBetween(String value1, String value2) {
			addCriterion("PHOTO between", value1, value2, "photo");
			return (Criteria) this;
		}

		public Criteria andPhotoNotBetween(String value1, String value2) {
			addCriterion("PHOTO not between", value1, value2, "photo");
			return (Criteria) this;
		}

		public Criteria andBegintimeIsNull() {
			addCriterion("BEGINTIME is null");
			return (Criteria) this;
		}

		public Criteria andBegintimeIsNotNull() {
			addCriterion("BEGINTIME is not null");
			return (Criteria) this;
		}

		public Criteria andBegintimeEqualTo(Date value) {
			addCriterionForJDBCDate("BEGINTIME =", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("BEGINTIME <>", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeGreaterThan(Date value) {
			addCriterionForJDBCDate("BEGINTIME >", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGINTIME >=", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeLessThan(Date value) {
			addCriterionForJDBCDate("BEGINTIME <", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("BEGINTIME <=", value, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeIn(List<Date> values) {
			addCriterionForJDBCDate("BEGINTIME in", values, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("BEGINTIME not in", values, "begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGINTIME between", value1, value2,
					"begintime");
			return (Criteria) this;
		}

		public Criteria andBegintimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("BEGINTIME not between", value1, value2,
					"begintime");
			return (Criteria) this;
		}

		public Criteria andEndtimeIsNull() {
			addCriterion("ENDTIME is null");
			return (Criteria) this;
		}

		public Criteria andEndtimeIsNotNull() {
			addCriterion("ENDTIME is not null");
			return (Criteria) this;
		}

		public Criteria andEndtimeEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME =", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <>", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeGreaterThan(Date value) {
			addCriterionForJDBCDate("ENDTIME >", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME >=", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeLessThan(Date value) {
			addCriterionForJDBCDate("ENDTIME <", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("ENDTIME <=", value, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeIn(List<Date> values) {
			addCriterionForJDBCDate("ENDTIME in", values, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotIn(List<Date> values) {
			addCriterionForJDBCDate("ENDTIME not in", values, "endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME between", value1, value2,
					"endtime");
			return (Criteria) this;
		}

		public Criteria andEndtimeNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("ENDTIME not between", value1, value2,
					"endtime");
			return (Criteria) this;
		}

		public Criteria andIsuseIsNull() {
			addCriterion("ISUSE is null");
			return (Criteria) this;
		}

		public Criteria andIsuseIsNotNull() {
			addCriterion("ISUSE is not null");
			return (Criteria) this;
		}

		public Criteria andIsuseEqualTo(String value) {
			addCriterion("ISUSE =", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseNotEqualTo(String value) {
			addCriterion("ISUSE <>", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseGreaterThan(String value) {
			addCriterion("ISUSE >", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseGreaterThanOrEqualTo(String value) {
			addCriterion("ISUSE >=", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseLessThan(String value) {
			addCriterion("ISUSE <", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseLessThanOrEqualTo(String value) {
			addCriterion("ISUSE <=", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseLike(String value) {
			addCriterion("ISUSE like", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseNotLike(String value) {
			addCriterion("ISUSE not like", value, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseIn(List<String> values) {
			addCriterion("ISUSE in", values, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseNotIn(List<String> values) {
			addCriterion("ISUSE not in", values, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseBetween(String value1, String value2) {
			addCriterion("ISUSE between", value1, value2, "isuse");
			return (Criteria) this;
		}

		public Criteria andIsuseNotBetween(String value1, String value2) {
			addCriterion("ISUSE not between", value1, value2, "isuse");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table RESTAURANT.ADS
	 * @mbggenerated  Thu Nov 26 13:19:00 CAT 2015
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue,
				String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ads
     *
     * @mbggenerated do_not_delete_during_merge Thu Nov 26 10:37:30 CAT 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}